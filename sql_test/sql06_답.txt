1. LOCATIONS 및 COUNTRIES 테이블을 사용하여 모든 부서의 주소를 생성하는 query를 작성하시오. 출력에 위치ID(location_id), 주소(street_address), 구/군(city), 시/도(state_province) 및 국가(country_name)를 표시하시오.
SELECT location_id, street_address, city, state_province, country_name
FROM   locations NATURAL JOIN countries;

SELECT l.location_id, l.street_address, l.city, l.state_province, c.country_name
FROM   locations l JOIN countries c
                     ON (l.country_id = c.country_id);

SELECT l.location_id, l.street_address, l.city, l.state_province, c.country_name
FROM   locations l, countries c
WHERE  l.country_id = c.country_id;

2. 모든 사원의 이름, 소속 부서번호 및 부서 이름을 표시하는 query를 작성하시오.
SELECT last_name, department_id, department_name
FROM   employees JOIN departments USING (department_id);

SELECT e.last_name, e.department_id, d.department_name
FROM   employees e JOIN departments d
                  ON (e.department_id = d.department_id);

SELECT e.last_name, e.department_id, d.department_name
FROM   employees e, departments d
WHERE  e.department_id = d.department_id;

3. Toronto에 근무하는 사원에 대한 보고서를 필요로 합니다. toronto에서 근무하는 모든 사원의 이름, 직무, 부서번호 및 부서 이름을 표시하시오.
SELECT e.last_name, e.job_id, e.department_id, d.department_name
FROM   employees e JOIN departments d
                     ON (e.department_id = d.department_id)
                   JOIN locations l
                     ON (d.location_id = l.location_id)
WHERE  LOWER(l.city) = 'toronto';

SELECT e.last_name, e.job_id, e.department_id, d.department_name
FROM   employees e, departments d, locations l
WHERE  e.department_id = d.department_id
AND    d.location_id = l.location_id
AND    LOWER(l.city) = 'toronto';

4. 사원의 이름 및 사원 번호를 해당 관리자의 이름 및 관리자 번호와 함께 표시하는 보고서를 작성하는데, 열 레이블을 각각 Employee, Emp#, Manager 및 Mgr#으로 지정하시오.
SELECT w.last_name "Employee", w.employee_id "EMP#", 
       m.last_name "Manager", m.employee_id "Mgr#"
FROM   employees w JOIN employees m
                     ON (w.manager_id = m.employee_id);

SELECT w.last_name "Employee", w.employee_id "EMP#", 
       m.last_name "Manager", m.employee_id "Mgr#"
FROM   employees w, employees m
WHERE  w.manager_id = m.employee_id;

SELECT w.last_name||'('||w.employee_id||')의 관리자는 '||
       m.last_name||'('||m.employee_id||')입니다.' "Notice"
FROM   employees w, employees m
WHERE  w.manager_id = m.employee_id;

5. King과 같이 해당 관리자가 지정되지 않은 사원도 표시하도록 4번 문장을 수정합니다. 사원 번호순으로 결과를 정렬하시오. 
SELECT   w.last_name "Employee", w.employee_id "EMP#", 
         m.last_name "Manager", m.employee_id "Mgr#"
FROM     employees w LEFT OUTER JOIN employees m
                                  ON (w.manager_id = m.employee_id)
ORDER BY 2;

SELECT   w.last_name "Employee", w.employee_id "EMP#", 
         m.last_name "Manager", m.employee_id "Mgr#"
FROM     employees w, employees m
WHERE    w.manager_id = m.employee_id(+)
ORDER BY 2;

6. 직무 등급 및 급여에 대한 보고서를 필요로 합니다. 먼저 JOB_GRADES 테이블의 구조를 표시한 다음 모든 사원의 이름, 직무, 부서 이름, 급여 및 등급을 표시하는 query를 작성하시오.

DESC job_grades;

SELECT e.last_name, e.job_id, d.department_name, e.salary, j.grade_level
FROM   employees e JOIN departments d
                     ON (e.department_id = d.department_id)
                   JOIN job_grades j
                     ON (e.salary BETWEEN j.lowest_sal AND j.highest_sal);

SELECT e.last_name, e.job_id, d.department_name, e.salary, j.grade_level
FROM   employees e, departments d, job_grades j
WHERE  e.department_id = d.department_id
AND    e.salary BETWEEN j.lowest_sal AND j.highest_sal;